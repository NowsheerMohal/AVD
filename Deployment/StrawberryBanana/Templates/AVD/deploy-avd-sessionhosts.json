{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located."
            },
            "defaultValue": "https://wvdportalstorageblob.blob.core.windows.net/galleryartifacts/Configuration.zip"
        },

        "vmNamePrefix": {
            "type": "string",
            "metadata": {
                "description": "This prefix will be used in combination with the VM number to create the VM name. This value includes the dash, so if using “rdsh” as the prefix, VMs would be named “rdsh-0”, “rdsh-1”, etc. You should use a unique prefix to reduce name collisions in Active Directory."
            },
            "defaultValue": "[take(toLower(resourceGroup().name),10)]"
        },
        "vmNumberOfInstances": {
            "type": "int",
            "metadata": {
                "description": "Number of session hosts that will be created and added to the hostpool."
            }
        },
        "vmDiskType": {
            "type": "string",
            "allowedValues": [
                "Premium_LRS",
                "StandardSSD_LRS",
                "Standard_LRS"
            ],
            "metadata": {
                "description": "The VM disk type for the VM: HDD or SSD."
            }
        },
        "vmSize": {
            "type": "string",
            "metadata": {
                "description": "The size of the session host VMs."
            },
            "defaultValue": "Standard_A2"
        },
        "enableAcceleratedNetworking": {
            "type": "bool",
            "metadata": {
                "description": "Enables Accelerated Networking feature, notice that VM size must support it, this is supported in most of general purpose and compute-optimized instances with 2 or more vCPUs, on instances that supports hyperthreading it is required minimum of 4 vCPUs."
            },
            "defaultValue": false
        },
        "administratorAccountUsername": {
            "type": "string",
            "metadata": {
                "description": "The username for the admin."
            }
        },
        "administratorAccountPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password that corresponds to the existing domain username."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources to be created in."
            }
        },
        "usePublicIP": {
            "type": "bool",
            "metadata": {
                "description": "Whether to use a Public IP"
            },
            "defaultValue": false
        },
        "publicIpAddressType": {
            "type": "string",
            "metadata": {
                "description": "The address type of the Public IP"
            },
            "allowedValues": [
                "Dynamic",
                "Static"
            ],
            "defaultValue": "Dynamic"
        },
        "publicIpAddressSku": {
            "type": "string",
            "metadata": {
                "description": "The sku name of the Public IP"
            },
            "allowedValues": [
                "Basic",
                "Standard"
            ],
            "defaultValue": "Basic"
        },
        "createNetworkSecurityGroup": {
            "type": "bool",
            "metadata": {
                "description": "Whether to create a new network security group or use an existing one"
            },
            "defaultValue": false
        },
        "networkSecurityGroupId": {
            "type": "string",
            "metadata": {
                "description": "The resource id of an existing network security group"
            },
            "defaultValue": ""
        },
        "networkInterfaceTags": {
            "type": "object",
            "metadata": {
                "description": "The tags to be assigned to the network interfaces"
            },
            "defaultValue": {}
        },
        "publicIPAddressTags": {
            "type": "object",
            "metadata": {
                "description": "The tags to be assigned to the public ip addresses"
            },
            "defaultValue": {}
        },
        "virtualMachineTags": {
            "type": "object",
            "metadata": {
                "description": "The tags to be assigned to the virtual machines"
            },
            "defaultValue": {}
        },
        "vmInitialNumber": {
            "type": "int",
            "metadata": {
                "description": "VM name prefix initial number."
            },
            "defaultValue": 1
        },
        "_guidValue": {
            "type": "string",
            "defaultValue": "[newGuid()]"
        },
        "hostpoolToken": {
            "type": "string",
            "metadata": {
                "description": "The token for adding VMs to the hostpool"
            }
        },
        "hostpoolName": {
            "type": "string",
            "metadata": {
                "description": "The name of the hostpool"
            }
        },
        "ouPath": {
            "type": "string",
            "metadata": {
                "description": "OUPath for the domain join"
            },
            "defaultValue": ""
        },
        "domain": {
            "type": "string",
            "metadata": {
                "description": "Domain to join"
            },
            "defaultValue": ""
        },
        "existingVnetName": {
            "type": "string",
            "metadata": {
                "description": "The name of the virtual network the VMs will be connected to."
            }
        },
        "existingSubnetName": {
            "type": "string",
            "metadata": {
                "description": "The subnet the VMs will be placed in."
            }
        },
        "virtualNetworkResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "The resource group containing the existing virtual network."
            }
        },
        "galleryName": {
            "type": "string"
        },
        "galleryImageDefinitionName": {
            "type": "string"
        },
        "galleryImageVersionName": {
            "type": "string"
        },
        "galleryResourceGroup": {
            "type": "string"
        }

    },
    "variables": {
        "rdshPrefix": "[concat(parameters('vmNamePrefix'),'-')]",
        "existingDomainUsername": "[first(split(parameters('administratorAccountUsername'), '@'))]",
        "imageReference": "[resourceId(parameters('galleryResourceGroup'),'Microsoft.Compute/galleries/images/versions', parameters('galleryName'), parameters('galleryImageDefinitionName'), parameters('galleryImageVersionName'))]",
        "subnet-id": "[resourceId(parameters('virtualNetworkResourceGroupName'),'Microsoft.Network/virtualNetworks/subnets',parameters('existingVnetName'), parameters('existingSubnetName'))]",
        "domain": "[if(equals(parameters('domain'), ''), last(split(parameters('administratorAccountUsername'), '@')), parameters('domain'))]",
        "storageAccountType": "[parameters('vmDiskType')]",
        "newNsgName": "[concat(variables('rdshPrefix'), 'nsg-', parameters('_guidValue'))]",
        "nsgId": "[if(parameters('createNetworkSecurityGroup'), resourceId('Microsoft.Network/networkSecurityGroups', variables('newNsgName')), parameters('networkSecurityGroupId'))]",
        "availabilitySet": "[resourceId('Microsoft.Compute/availabilitySets/', concat(variables('rdshPrefix'), 'availabilitySet-', parameters('location')))]",
        "rdshVmNamesOutput": {
            "copy": [
                {
                    "name": "rdshVmNamesCopy",
                    "count": "[parameters('vmNumberOfInstances')]",
                    "input": {
                        "name": "[concat(variables('rdshPrefix'), add(parameters('vmInitialNumber'), copyIndex('rdshVmNamesCopy')))]"
                    }
                }
            ]
        }
    },
    "resources": [
        {
            "copy": {
                "name": "rdsh-pip-loop",
                "count": "[parameters('vmNumberOfInstances')]"
            },
            "condition": "[parameters('usePublicIP')]",
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2019-02-01",
            "name": "[concat(variables('rdshPrefix'), add(copyindex(), parameters('vmInitialNumber')), '-ip')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('publicIPAddressTags')]",
            "sku": {
                "name": "[parameters('publicIpAddressSku')]"
            },
            "properties": {
                "publicIpAllocationMethod": "[parameters('publicIpAddressType')]"
            }
        },
        {
            "apiVersion": "2018-11-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('rdshPrefix'), add(copyindex(), parameters('vmInitialNumber')), '-nic')]",
            "location": "[parameters('location')]",
            "tags": "[parameters('networkInterfaceTags')]",
            "copy": {
                "name": "rdsh-nic-loop",
                "count": "[parameters('vmNumberOfInstances')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnet-id')]"
                            },
                            "publicIpAddress": "[if(parameters('usePublicIP'), json(concat('{\"id\": \"', resourceId('Microsoft.Network/publicIpAddresses', concat(variables('rdshPrefix'), add(copyindex(), parameters('vmInitialNumber')), '-ip')), '\"}')), json('null'))]"
                        }
                    }
                ],
                "enableAcceleratedNetworking": "[parameters('enableAcceleratedNetworking')]",
                "networkSecurityGroup": "[if(empty(parameters('networkSecurityGroupId')), json('null'), json(concat('{\"id\": \"', variables('nsgId'), '\"}')))]"
            },
            "dependsOn": [
                "rdsh-pip-loop"
            ]
        },
        {
            "apiVersion": "2018-10-01",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('rdshPrefix'), add(copyindex(), parameters('vmInitialNumber')))]",
            "location": "[parameters('location')]",
            "tags": "[parameters('virtualMachineTags')]",
            "copy": {
                "name": "rdsh-vm-loop",
                "count": "[parameters('vmNumberOfInstances')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('rdshPrefix'), add(copyindex(), parameters('vmInitialNumber')), '-nic')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "availabilitySet": {
                    "id": "[variables('availabilitySet')]"
                },
                "osProfile": {
                    "computerName": "[concat(variables('rdshPrefix'), add(copyindex(), parameters('vmInitialNumber')))]",
                    "adminUsername": "[variables('existingDomainUsername')]",
                    "adminPassword": "[parameters('administratorAccountPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "id": "[variables('imageReference')]"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('storageAccountType')]"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('rdshPrefix'), add(copyindex(), parameters('vmInitialNumber')), '-nic'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": false
                    }
                },
                "licenseType": "Windows_Client"
            }
        },
        {
            "apiVersion": "2018-10-01",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('rdshPrefix'), add(copyindex(), parameters('vmInitialNumber')), '/', 'joindomain')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "rdsh-vm-loop"
            ],
            "copy": {
                "name": "rdsh-domain-join-loop",
                "count": "[parameters('vmNumberOfInstances')]"
            },
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "JsonADDomainExtension",
                "typeHandlerVersion": "1.3",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "name": "[variables('domain')]",
                    "ouPath": "[parameters('ouPath')]",
                    "user": "[parameters('administratorAccountUsername')]",
                    "restart": "true",
                    "options": "3"
                },
                "protectedSettings": {
                    "password": "[parameters('administratorAccountPassword')]"
                }
            }
        },
        {
            "apiVersion": "2018-10-01",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('rdshPrefix'), add(copyindex(), parameters('vmInitialNumber')), '/', 'dscextension')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "rdsh-domain-join-loop"
            ],
            "copy": {
                "name": "rdsh-dsc-loop",
                "count": "[parameters('vmNumberOfInstances')]"
            },
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.73",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "modulesUrl": "[parameters('artifactsLocation')]",
                    "configurationFunction": "Configuration.ps1\\AddSessionHost",
                    "properties": {
                        "hostPoolName": "[parameters('hostpoolName')]",
                        "registrationInfoToken": "[parameters('hostpoolToken')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "rdshVmNamesObject": {
            "value": "[variables('rdshVmNamesOutput')]",
            "type": "object"
        }
    }
}