parameters:
  ArmOutputString: ''
  variablePrefix: ''
  taskName: ''

steps:
- task: AzurePowerShell@5
  name: ${{ parameters.taskName }}
  inputs:
    azureSubscription: 'CloudMedics'
    ScriptType: 'InlineScript'
    Inline: |
      function Convert-ArmOutputToPsObject {
          param (
              [Parameter(Mandatory = $true)]
              [string]
              $ArmOutputString,
              [Parameter(Mandatory = $true)]
              [string]
              $variablePrefix
          )

          if ($PSBoundParameters['Verbose']) {
              Write-Host "Arm output json is:"
              Write-Host $ArmOutputString
          }

          $armOutputObj = $ArmOutputString | ConvertFrom-Json
          $armOutputObj.PSObject.Properties | ForEach-Object {
              $type = ($_.value.type).ToLower()
              $keyname = $($_.name)
              $value = $_.value.value
              switch ($type) {
                  securestring {
                      Write-Host "##vso[task.setvariable variable=$keyname;isOutput=true;issecret=true]$value"
                      Write-Host "Added Azure DevOps secret variable '$keyname' ('$type')"
                  }
                  string {
                      Write-Host "##vso[task.setvariable variable=$keyname;isOutput=true]$value"
                      Write-Host "Added Azure DevOps variable '$keyname' ('$type') with value '$value'"
                  }
                  array {
                      ($armOutputObj.PSObject.Properties | where {$_.Name -eq $keyname}).Value.value | ForEach-Object {
                        Write-Host "##vso[task.setvariable variable=$_.name;isOutput=true]$_.value"
                        Write-Host "Added Azure DevOps variable '$($_.name)' ('$type') with value '$($_.value)'"
                      }
                  }
                  default {
                      Throw "Type '$type' is not supported for '$keyname'"
                  }
              }
          }
      }
      Convert-ArmOutputToPsObject -variablePrefix ${{ parameters.variablePrefix }}  -ArmOutputString '${{ parameters.ArmOutputString }}' -Verbose
    azurePowerShellVersion: 'LatestVersion'